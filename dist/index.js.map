{"version":3,"file":"index.js","sources":["../src/utils/dateUtils.ts","../src/hooks/useSlotCalendar.ts","../src/utils/constants.ts","../src/components/SlotCalendar.tsx","../src/types/index.ts"],"sourcesContent":["export const formatTime = (time: string): string => {\n  return time;\n};\n\nexport const formatDateTime = (date: Date, locale = 'ja'): string => {\n  if (locale === 'ja') {\n    return date.toLocaleDateString('ja-JP', {\n      year: 'numeric',\n      month: 'numeric', \n      day: 'numeric',\n      weekday: 'short'\n    }) + ' ' + date.toLocaleTimeString('ja-JP', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n  \n  return date.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric', \n    weekday: 'short'\n  }) + ' ' + date.toLocaleTimeString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\nexport const addDays = (date: Date, days: number): Date => {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n};\n\nexport const addMinutes = (date: Date, minutes: number): Date => {\n  const result = new Date(date);\n  result.setMinutes(result.getMinutes() + minutes);\n  return result;\n};\n\nexport const startOfWeek = (date: Date): Date => {\n  const result = new Date(date);\n  const day = result.getDay();\n  const diff = result.getDate() - day;\n  result.setDate(diff);\n  result.setHours(0, 0, 0, 0);\n  return result;\n};\n\nexport const createTimeSlotFromString = (\n  baseDate: Date, \n  timeString: string, \n  incrementMinutes: number, \n  slotIndex: number\n): Date => {\n  const [hours, minutes] = timeString.split(':').map(Number);\n  const result = new Date(baseDate);\n  result.setHours(hours, minutes, 0, 0);\n  result.setMinutes(result.getMinutes() + (incrementMinutes * slotIndex));\n  return result;\n};","import { useState, useEffect, useCallback } from 'react';\nimport { CalendarData, SlotCalendarState } from '../types';\nimport { addDays } from '../utils/dateUtils';\n\nexport const useSlotCalendar = (\n  initialDate: Date = new Date(),\n  onLoadingChange?: (isLoading: boolean) => void\n) => {\n  const [state, setState] = useState<SlotCalendarState>({\n    currentDate: initialDate,\n    calendarData: null,\n    isLoading: false,\n    error: null\n  });\n\n  const setLoading = useCallback((loading: boolean) => {\n    setState(prev => ({ ...prev, isLoading: loading }));\n    onLoadingChange?.(loading);\n  }, [onLoadingChange]);\n\n  const setError = useCallback((error: string | null) => {\n    setState(prev => ({ ...prev, error }));\n  }, []);\n\n  const setCalendarData = useCallback((data: CalendarData | null) => {\n    setState(prev => ({ ...prev, calendarData: data }));\n  }, []);\n\n  const navigateWeek = useCallback((direction: 'prev' | 'next') => {\n    const days = direction === 'next' ? 7 : -7;\n    const newDate = addDays(state.currentDate, days);\n    setState(prev => ({ ...prev, currentDate: newDate }));\n  }, [state.currentDate]);\n\n  const loadSlots = useCallback(async (\n    menuItemIds: number[],\n    staffId: number | undefined,\n    isStaffSelected: boolean,\n    shopId: number,\n    reservationId?: number\n  ) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // This would be replaced with actual API call\n      const params = new URLSearchParams({\n        shopId: shopId.toString(),\n        year: state.currentDate.getFullYear().toString(),\n        month: (state.currentDate.getMonth() + 1).toString(),\n        day: state.currentDate.getDate().toString(),\n        menuItemIds: encodeURIComponent(JSON.stringify(menuItemIds))\n      });\n\n      if (staffId) {\n        params.append('staffId', staffId.toString());\n      }\n      if (reservationId) {\n        params.append('reservationId', reservationId.toString());\n      }\n\n      // Mock API call - replace with actual fetch\n      const response = await fetch(`/api/slots?${params}`);\n      \n      if (!response.ok) {\n        throw new Error('Failed to load slots');\n      }\n\n      const calendarData: CalendarData = await response.json();\n      setCalendarData(calendarData);\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'Unknown error');\n    } finally {\n      setLoading(false);\n    }\n  }, [state.currentDate, setLoading, setError, setCalendarData]);\n\n  const navigateToPrevWeek = useCallback(() => {\n    navigateWeek('prev');\n  }, [navigateWeek]);\n\n  const navigateToNextWeek = useCallback(() => {\n    navigateWeek('next');\n  }, [navigateWeek]);\n\n  return {\n    ...state,\n    loadSlots,\n    navigateToPrevWeek,\n    navigateToNextWeek,\n    setCurrentDate: (date: Date) => setState(prev => ({ ...prev, currentDate: date }))\n  };\n};","export const SLOT_ARRAY_INDEX = {\n  STAFF_ID: 0,\n  SLOTS_STATUS: 1,\n} as const;\n\nexport const SLOTS_STATUS = {\n  UNAVAILABLE: 'unavailable',\n  AVAILABLE: 'available', \n  RESERVED: 'reserved'\n} as const;\n\nexport const SLOT_SYMBOLS = {\n  [SLOTS_STATUS.UNAVAILABLE]: '-',\n  [SLOTS_STATUS.AVAILABLE]: '◎', \n  [SLOTS_STATUS.RESERVED]: '×'\n} as const;\n\nexport const WEEKDAYS_JP = ['日', '月', '火', '水', '木', '金', '土'] as const;\nexport const WEEKDAYS_EN = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'] as const;","import React, { useEffect, useRef } from 'react';\nimport { SlotCalendarProps, CalendarDay, TimeSlot } from '../types';\nimport { useSlotCalendar } from '../hooks/useSlotCalendar';\nimport { SLOT_SYMBOLS, SLOTS_STATUS } from '../utils/constants';\nimport { createTimeSlotFromString, formatDateTime } from '../utils/dateUtils';\n\nexport const SlotCalendar: React.FC<SlotCalendarProps> = ({\n  menuItemIds = [],\n  staffId,\n  isStaffSelected = false,\n  shopId,\n  reservationId,\n  initialDate = new Date(),\n  onSlotSelect,\n  onLoadingChange,\n  className = '',\n  disabled = false\n}) => {\n  const {\n    currentDate,\n    calendarData,\n    isLoading,\n    error,\n    loadSlots,\n    navigateToPrevWeek,\n    navigateToNextWeek\n  } = useSlotCalendar(initialDate, onLoadingChange);\n\n  const tableRef = useRef<HTMLTableElement>(null);\n\n  // Load slots when dependencies change\n  useEffect(() => {\n    if (menuItemIds.length > 0) {\n      loadSlots(menuItemIds, staffId, isStaffSelected, shopId, reservationId);\n    }\n  }, [currentDate, menuItemIds, staffId, isStaffSelected, shopId, reservationId, loadSlots]);\n\n  // Initialize calendar structure\n  const initializeCalendar = () => {\n    if (!calendarData || !tableRef.current) return;\n\n    const table = tableRef.current;\n    table.innerHTML = '';\n\n    // Create header rows\n    const monthRow = document.createElement('tr');\n    monthRow.id = 'cal-month-tr';\n    monthRow.className = 'cal-month';\n    monthRow.innerHTML = `\n      <th rowspan=\"2\"></th>\n      <th id=\"cal-month-th\" colspan=\"7\">${calendarData.year}年${calendarData.month}月</th>\n    `;\n\n    const weekRow = document.createElement('tr');\n    weekRow.id = 'cal-week-tr';\n    let weekRowHTML = '';\n    \n    calendarData.days.forEach((day, i) => {\n      const dayClass = getDayClass(day.weekday);\n      weekRowHTML += `\n        <th id=\"cal-day-${i + 1}\" class=\"cal-day-th ${dayClass}\">\n          <span id=\"cal-date-${i + 1}\" class=\"cal-date\">${day.day}</span>\n          <span id=\"cal-weekday-${i + 1}\" class=\"cal-weekday\">${day.weekday}</span>\n        </th>\n      `;\n    });\n    weekRow.innerHTML = weekRowHTML;\n\n    table.appendChild(monthRow);\n    table.appendChild(weekRow);\n\n    // Create time slot rows\n    const numSlots = calendarData.days[0]?.slots?.length || 0;\n    for (let slotIndex = 0; slotIndex < numSlots; slotIndex++) {\n      const timeRow = document.createElement('tr');\n      timeRow.id = `cal-time-tr-${slotIndex + 1}`;\n      timeRow.className = 'cal-time-slot';\n\n      // Time header\n      const timeSlot = createTimeSlotFromString(\n        new Date(calendarData.year, calendarData.month - 1, calendarData.day),\n        calendarData.firstSlotStartAt,\n        calendarData.availabilityIncrements,\n        slotIndex\n      );\n      \n      let rowHTML = `<th id=\"cal-time-th-${slotIndex + 1}\" class=\"cal-time\">${timeSlot.toLocaleTimeString('ja-JP', { hour: '2-digit', minute: '2-digit' })}</th>`;\n\n      // Day cells\n      calendarData.days.forEach((day, dayIndex) => {\n        const slot = day.slots[slotIndex];\n        if (slot) {\n          const cellId = `cal-time-td-${slotIndex + 1}-${dayIndex + 1}`;\n          const cellClass = getCellClass(slot.status);\n          const symbol = SLOT_SYMBOLS[slot.status];\n          \n          rowHTML += `<td id=\"${cellId}\" class=\"${cellClass}\" data-slot-index=\"${slotIndex}\" data-day-index=\"${dayIndex}\">${symbol}</td>`;\n        } else {\n          rowHTML += `<td class=\"off\">-</td>`;\n        }\n      });\n\n      timeRow.innerHTML = rowHTML;\n      table.appendChild(timeRow);\n    }\n\n    // Add click handlers\n    addClickHandlers();\n  };\n\n  const getDayClass = (weekday: string): string => {\n    switch (weekday) {\n      case '祝':\n      case '日':\n        return 'red';\n      case '土':\n        return 'blue';\n      default:\n        return '';\n    }\n  };\n\n  const getCellClass = (status: string): string => {\n    switch (status) {\n      case SLOTS_STATUS.AVAILABLE:\n        return 'available red';\n      case SLOTS_STATUS.RESERVED:\n        return 'reserved gray';\n      case SLOTS_STATUS.UNAVAILABLE:\n      default:\n        return 'off';\n    }\n  };\n\n  const addClickHandlers = () => {\n    if (!calendarData || !tableRef.current) return;\n\n    const cells = tableRef.current.querySelectorAll('td[data-slot-index]');\n    cells.forEach((cell) => {\n      cell.addEventListener('click', handleSlotClick);\n    });\n  };\n\n  const handleSlotClick = (event: Event) => {\n    if (disabled) return;\n\n    const target = event.target as HTMLElement;\n    if (target.textContent !== '◎') return; // Only available slots\n\n    const slotIndex = parseInt(target.dataset.slotIndex || '0');\n    const dayIndex = parseInt(target.dataset.dayIndex || '0');\n\n    if (!calendarData || !calendarData.days[dayIndex]) return;\n\n    const day = calendarData.days[dayIndex];\n    const slot = day.slots[slotIndex];\n\n    if (!slot || slot.status !== SLOTS_STATUS.AVAILABLE) return;\n\n    // Calculate the exact start time\n    const startTime = createTimeSlotFromString(\n      new Date(day.year, day.month - 1, day.day),\n      calendarData.firstSlotStartAt,\n      calendarData.availabilityIncrements,\n      slotIndex\n    );\n\n    // Find sync token for the staff\n    const syncToken = calendarData.syncTokens?.find(\n      token => token.staffId === slot.staffId\n    )?.syncToken || calendarData.syncToken || '';\n\n    const slotData = {\n      startAt: startTime.toISOString(),\n      staff: {\n        id: slot.staffId || 0,\n        nameDisplay: isStaffSelected ? 'Selected Staff' : 'No Preference'\n      },\n      syncToken\n    };\n\n    onSlotSelect?.(slotData);\n  };\n\n  // Initialize calendar when data changes\n  useEffect(() => {\n    if (calendarData) {\n      initializeCalendar();\n    }\n  }, [calendarData]);\n\n  const handlePrevWeek = () => {\n    if (!disabled && calendarData?.hasPrev) {\n      navigateToPrevWeek();\n    }\n  };\n\n  const handleNextWeek = () => {\n    if (!disabled && calendarData?.hasNext) {\n      navigateToNextWeek();\n    }\n  };\n\n  const getCalendarClassName = () => {\n    const baseClass = 'slot-calendar';\n    const classes = [baseClass];\n\n    if (className) classes.push(className);\n    if (disabled) classes.push(`${baseClass}--disabled`);\n    if (isLoading) classes.push(`${baseClass}--loading`);\n\n    return classes.join(' ');\n  };\n\n  return (\n    <div className={getCalendarClassName()}>\n      {/* Navigation Header */}\n      <div className=\"slot-calendar__header\">\n        <div className=\"slot-calendar__navigation\">\n          <button\n            id=\"cal-prev-btn\"\n            className=\"slot-calendar__nav-button\"\n            onClick={handlePrevWeek}\n            disabled={disabled || isLoading || !calendarData?.hasPrev}\n          >\n            <span className=\"material-icons\">navigate_before</span>\n            前の週\n          </button>\n\n          <button\n            id=\"cal-next-btn\"\n            className=\"slot-calendar__nav-button\"\n            onClick={handleNextWeek}\n            disabled={disabled || isLoading || !calendarData?.hasNext}\n          >\n            次の週\n            <span className=\"material-icons\">navigate_next</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Loading Progress */}\n      {isLoading && (\n        <div className=\"slot-calendar__progress\">\n          <div className=\"progress-bar\"></div>\n        </div>\n      )}\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"slot-calendar__error\">\n          エラーが発生しました: {error}\n        </div>\n      )}\n\n      {/* Calendar Table */}\n      <div className=\"slot-calendar__table-wrapper\">\n        <table\n          ref={tableRef}\n          id=\"cal-table\"\n          className=\"slot-calendar__table\"\n          style={{ opacity: isLoading ? 0.5 : 1 }}\n        >\n          {/* Table content is dynamically generated */}\n        </table>\n      </div>\n    </div>\n  );\n};","export enum SlotStatus {\n  UNAVAILABLE = 'unavailable',\n  AVAILABLE = 'available', \n  RESERVED = 'reserved'\n}\n\nexport interface TimeSlot {\n  staffId?: number;\n  status: SlotStatus;\n  startTime: Date;\n  endTime: Date;\n}\n\nexport interface CalendarDay {\n  year: number;\n  month: number;\n  day: number;\n  weekday: string;\n  slots: TimeSlot[];\n}\n\nexport interface CalendarData {\n  year: number;\n  month: number;\n  day: number;\n  firstSlotStartAt: string; // HH:mm format\n  availabilityIncrements: number; // minutes\n  hasPrev: boolean;\n  hasNext: boolean;\n  days: CalendarDay[];\n  syncTokens?: Array<{ staffId: number; syncToken: string }>;\n  syncToken?: string;\n}\n\nexport interface SlotCalendarProps {\n  menuItemIds?: number[];\n  staffId?: number;\n  isStaffSelected?: boolean;\n  shopId: number;\n  reservationId?: number;\n  initialDate?: Date;\n  onSlotSelect?: (slotData: {\n    startAt: string;\n    staff: { id: number; nameDisplay: string };\n    syncToken: string;\n  }) => void;\n  onLoadingChange?: (isLoading: boolean) => void;\n  className?: string;\n  disabled?: boolean;\n}\n\nexport interface BusinessHours {\n  openTime: string; // HH:mm\n  closeTime: string; // HH:mm\n  availabilityIncrements: number; // minutes\n}\n\nexport interface SlotCalendarState {\n  currentDate: Date;\n  calendarData: CalendarData | null;\n  isLoading: boolean;\n  error: string | null;\n}"],"names":["useState","useCallback","useRef","useEffect","_jsxs","_jsx","SlotStatus"],"mappings":"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"}